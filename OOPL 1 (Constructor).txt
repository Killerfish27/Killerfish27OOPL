/* 
Implement a class Complex which represents the Complex Number data type. Implement the following
1.	Constructor (including a default constructor which creates the complex number 0+0i).
2.	Overload operator+ to add two complex numbers.
3.	Overload operator* to multiply two complex numbers.
4.	Overload operators << and >> to print and read Complex Numbers
*/


#include<iostream>
using namespace std;

class complex 
{
public :
    float real,img;
    complex(){}
    complex operator+(complex);
    complex operator*(complex);
    friend ostream &operator<<(ostream&,complex&);
    friend istream &operator>>(istream&,complex&);
};

complex complex::operator+(complex obj)
{
    complex temp;
    temp.real=real+obj.real;
    temp.img=img+obj.img;
    return temp;
}
 complex complex::operator*(complex obj)
 {
    complex temp;
    temp.real=real*obj.real-img*obj.img;
    temp.img=real*obj.img+img*obj.real;
    return temp;
 }

 istream &operator>>(istream &in,complex&obj)
 {
    in>>obj.real;
    in>>obj.img;
    return in;
 }

 ostream &operator<<(ostream &out,complex&obj)
 {
    out<<""<<obj.real;
    out<<"+"<<obj.img<<"i";
    return out;
 }

 int main()
 {
    complex a,b,c,d;
    cout<<"\n The First Complex Number is :";
    cout<<"\n Enter Real and Img:";
    cin>>a;
    cout<<"\n The Second Complex Number is :";
    cout<<"\n Enter Real and Img:";
     cin>>b;
     cout<<"\n Arithmetic Operations";
     c=a+b;
     cout<<"\n Addition =";
     cout<<c;
     d=a*b;
     cout<<"\n Multiplication =";
     cout<<d;
     cout<<endl;
     return 0;
 }
